// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

// Creating a room outcome
type CreateResult interface {
	IsCreateResult()
}

type Identifiable interface {
	IsIdentifiable()
}

// Joining a room possible outcome
type JoinResult interface {
	IsJoinResult()
}

// Leaving a room possible outcome
type LeaveResult interface {
	IsLeaveResult()
}

// LogIn Authentication result
type LogIn interface {
	IsLogIn()
}

// Sending message result
type SendResult interface {
	IsSendResult()
}

// SignUp Authentication result
type SignUp interface {
	IsSignUp()
}

// User with the ID and corresponding username already in the room
type AlreadyJoined struct {
	// User ID Given
	ID string `json:"id"`
	// Coresponding Username
	Username string `json:"username"`
}

func (AlreadyJoined) IsJoinResult() {}

// User credential result
type Credentials struct {
	// JWT Access token
	AccessToken string `json:"accessToken"`
	// JWT Access token expiration date
	ExpireAt string `json:"expireAt"`
	// User information
	User *User `json:"user"`
}

func (Credentials) IsSignUp() {}
func (Credentials) IsLogIn()  {}

// Result showing that User information is invalid for a given reason
type InvalidUser struct {
	// Username that is invalid
	Username string `json:"username"`
	// Given reason why it is invalid
	Reason string `json:"reason"`
}

func (InvalidUser) IsSignUp() {}
func (InvalidUser) IsLogIn()  {}

// User with the ID are not in the room
type NotAParticipant struct {
	// User ID Given
	ID string `json:"id"`
	// Coresponding Username
	Username string `json:"username"`
}

func (NotAParticipant) IsSendResult()  {}
func (NotAParticipant) IsLeaveResult() {}

// No use authentication found
type NotLoggedIn struct {
	// Username if exist
	Username *string `json:"username"`
}

func (NotLoggedIn) IsSendResult()   {}
func (NotLoggedIn) IsJoinResult()   {}
func (NotLoggedIn) IsLeaveResult()  {}
func (NotLoggedIn) IsCreateResult() {}

type OperationFailed struct {
	Reason string `json:"reason"`
}

func (OperationFailed) IsJoinResult()   {}
func (OperationFailed) IsLeaveResult()  {}
func (OperationFailed) IsCreateResult() {}

// Room being lookup doesnt exist based on the ID given
type RoomDoesntExist struct {
	// ID Given
	ID string `json:"id"`
}

func (RoomDoesntExist) IsSendResult()  {}
func (RoomDoesntExist) IsJoinResult()  {}
func (RoomDoesntExist) IsLeaveResult() {}

// Room related successful result
type RoomSuccessOperation struct {
	// Successful payload
	Payload *Room `json:"payload"`
}

func (RoomSuccessOperation) IsJoinResult()   {}
func (RoomSuccessOperation) IsLeaveResult()  {}
func (RoomSuccessOperation) IsCreateResult() {}

// Successfully send message
type SendSuccessful struct {
	// Message being sent
	Message *Message `json:"message"`
}

func (SendSuccessful) IsSendResult() {}
